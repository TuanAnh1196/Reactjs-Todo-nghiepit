{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : ''; //find index to change status \n\nvar findIndex = (tasks, id) => {\n  let result = -1;\n  tasks.forEach((task, index) => {\n    if (task.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nvar myReducer = (state = initialState, action) => {\n  var id = '';\n  var index = -1;\n\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.SAVE_TASK:\n      if (action.task.id) {\n        var newTask = {\n          id: 1 + Math.random() * (1000 - 1),\n          name: action.task.name,\n          status: action.status === 'true' ? true : false\n        };\n        state.push(newTask);\n        localStorage.setItem('tasks', JSON.stringify(state));\n      }\n\n      return [...state];\n\n    case types.UPDATE_STATUS_TASK:\n      // console.log(action);\n      id = action.id;\n      index = findIndex(state, id); //state = task\n\n      state[index].status = !state[index].status;\n      localStorage.setItem('tasks', JSON.stringify(state)); // console.log(state);\n\n      return [...state];\n\n    case types.DELETE_TASK:\n      id = action.id;\n      index = findIndex(state, id); //state = task\n\n      state.splice(index, 1);\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Reactjs-Todo-nghiepit/src/reducers/tasks.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","findIndex","tasks","id","result","forEach","task","index","myReducer","state","action","type","LIST_ALL","SAVE_TASK","newTask","Math","random","name","status","push","setItem","stringify","UPDATE_STATUS_TASK","DELETE_TASK","splice"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC,C,CAEA;;AACA,IAAIM,SAAS,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AAC3B,MAAIC,MAAM,GAAG,CAAC,CAAd;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,QAAID,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAChBC,MAAAA,MAAM,GAAGG,KAAT;AACH;AACJ,GAJD;AAKA,SAAOH,MAAP;AACH,CARD;;AAUA,IAAII,SAAS,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC9C,MAAIP,EAAE,GAAG,EAAT;AACA,MAAII,KAAK,GAAG,CAAC,CAAb;;AACA,UAAQG,MAAM,CAACC,IAAf;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKf,KAAK,CAACmB,SAAX;AACI,UAAGH,MAAM,CAACJ,IAAP,CAAYH,EAAf,EAAkB;AACd,YAAIW,OAAO,GAAG;AACVX,UAAAA,EAAE,EAAE,IAAKY,IAAI,CAACC,MAAL,MAAiB,OAAO,CAAxB,CADC;AAEVC,UAAAA,IAAI,EAAEP,MAAM,CAACJ,IAAP,CAAYW,IAFR;AAGVC,UAAAA,MAAM,EAAER,MAAM,CAACQ,MAAP,KAAkB,MAAlB,GAA2B,IAA3B,GAAkC;AAHhC,SAAd;AAKAT,QAAAA,KAAK,CAACU,IAAN,CAAWL,OAAX;AACAhB,QAAAA,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA8BxB,IAAI,CAACyB,SAAL,CAAeZ,KAAf,CAA9B;AACH;;AAGD,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKf,KAAK,CAAC4B,kBAAX;AACI;AACAnB,MAAAA,EAAE,GAAGO,MAAM,CAACP,EAAZ;AACAI,MAAAA,KAAK,GAAGN,SAAS,CAACQ,KAAD,EAAQN,EAAR,CAAjB,CAHJ,CAGkC;;AAE9BM,MAAAA,KAAK,CAACF,KAAD,CAAL,CAAaW,MAAb,GAAsB,CAACT,KAAK,CAACF,KAAD,CAAL,CAAaW,MAApC;AAEApB,MAAAA,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA8BxB,IAAI,CAACyB,SAAL,CAAeZ,KAAf,CAA9B,EAPJ,CAQI;;AAEA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKf,KAAK,CAAC6B,WAAX;AACIpB,MAAAA,EAAE,GAAGO,MAAM,CAACP,EAAZ;AACAI,MAAAA,KAAK,GAAGN,SAAS,CAACQ,KAAD,EAAQN,EAAR,CAAjB,CAFJ,CAEkC;;AAC9BM,MAAAA,KAAK,CAACe,MAAN,CAAajB,KAAb,EAAoB,CAApB;AACAT,MAAAA,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA8BxB,IAAI,CAACyB,SAAL,CAAeZ,KAAf,CAA9B;AAEA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ;AACI,aAAOA,KAAP;AAnCR;AAsCH,CAzCD;;AA2CA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes';\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : '';\n\n//find index to change status \nvar findIndex = (tasks, id) => {\n    let result = -1;\n    tasks.forEach((task, index) => {\n        if (task.id === id) {\n            result = index;\n        }\n    });\n    return result;\n}\n\nvar myReducer = (state = initialState, action) => {\n    var id = '';\n    var index = -1;\n    switch (action.type) {\n        case types.LIST_ALL:\n            return state;\n        case types.SAVE_TASK:\n            if(action.task.id){\n                var newTask = {\n                    id: 1 + (Math.random() * (1000 - 1)),\n                    name: action.task.name,\n                    status: action.status === 'true' ? true : false,\n                }\n                state.push(newTask);\n                localStorage.setItem('tasks', JSON.stringify(state));\n            }\n            \n\n            return [...state];\n        case types.UPDATE_STATUS_TASK:\n            // console.log(action);\n            id = action.id;\n            index = findIndex(state, id); //state = task\n\n            state[index].status = !state[index].status;\n\n            localStorage.setItem('tasks', JSON.stringify(state));\n            // console.log(state);\n\n            return [...state];\n        case types.DELETE_TASK:\n            id = action.id;\n            index = findIndex(state, id); //state = task\n            state.splice(index, 1);\n            localStorage.setItem('tasks', JSON.stringify(state));\n\n            return [...state];\n        default:\n            return state;\n    }\n\n};\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}