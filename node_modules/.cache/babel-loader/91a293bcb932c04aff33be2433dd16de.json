{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : ''; //find index to change status \n\nvar findIndex = (task, id) => {\n  let tasks = this.state.tasks;\n  let result = -1;\n  tasks.forEach((task, index) => {\n    if (task.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: 1 + Math.random() * (1000 - 1),\n        name: action.task.name,\n        status: action.status === 'true' ? true : false\n      };\n      state.push(newTask);\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return [...state];\n\n    case types.UPDATE_STATUS_TASK:\n      //kick status thi toggle status\n      let index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Reactjs-Todo-nghiepit/src/reducers/tasks.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","findIndex","task","id","tasks","state","result","forEach","index","myReducer","action","type","LIST_ALL","ADD_TASK","newTask","Math","random","name","status","push","setItem","stringify","UPDATE_STATUS_TASK","setState"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC,C,CAEA;;AACA,IAAIM,SAAS,GAAG,CAACC,IAAD,EAAMC,EAAN,KAAa;AAAA,MACnBC,KADmB,GACT,KAAKC,KADI,CACnBD,KADmB;AAEzB,MAAIE,MAAM,GAAG,CAAC,CAAd;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAc,CAACL,IAAD,EAAOM,KAAP,KAAiB;AAC3B,QAAIN,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;AAChBG,MAAAA,MAAM,GAAGE,KAAT;AACH;AACJ,GAJD;AAKA,SAAOF,MAAP;AACH,CATD;;AAWA,IAAIG,SAAS,GAAG,CAACJ,KAAK,GAAGL,YAAT,EAAuBU,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACI,aAAOP,KAAP;;AACJ,SAAKX,KAAK,CAACmB,QAAX;AACI,UAAIC,OAAO,GAAG;AACVX,QAAAA,EAAE,EAAE,IAAKY,IAAI,CAACC,MAAL,MAAiB,OAAO,CAAxB,CADC;AAEVC,QAAAA,IAAI,EAAEP,MAAM,CAACR,IAAP,CAAYe,IAFR;AAGVC,QAAAA,MAAM,EAAER,MAAM,CAACQ,MAAP,KAAkB,MAAlB,GAA2B,IAA3B,GAAkC;AAHhC,OAAd;AAKAb,MAAAA,KAAK,CAACc,IAAN,CAAWL,OAAX;AACAhB,MAAAA,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA8BxB,IAAI,CAACyB,SAAL,CAAehB,KAAf,CAA9B;AAEA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKX,KAAK,CAAC4B,kBAAX;AACI;AACI,UAAId,KAAK,GAAG,KAAKP,SAAL,CAAeE,EAAf,CAAZ;;AACA,UAAIK,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdJ,QAAAA,KAAK,CAACI,KAAD,CAAL,CAAaU,MAAb,GAAsB,CAACd,KAAK,CAACI,KAAD,CAAL,CAAaU,MAApC;AACA,aAAKK,QAAL,CAAc;AACVnB,UAAAA,KAAK,EAAEA;AADG,SAAd;AAGAN,QAAAA,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA8BxB,IAAI,CAACyB,SAAL,CAAejB,KAAf,CAA9B;AACH;;AAEL,aAAOC,KAAP;;AACJ;AACI,aAAOA,KAAP;AA1BR;AA6BH,CA9BD;;AAgCA,eAAeI,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes';\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : '';\n\n//find index to change status \nvar findIndex = (task,id) => {\n    let { tasks } = this.state;\n    let result = -1;\n    tasks.forEach((task, index) => {\n        if (task.id === id) {\n            result = index;\n        }\n    });\n    return result;\n}\n\nvar myReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.LIST_ALL:\n            return state;\n        case types.ADD_TASK:\n            var newTask = {\n                id: 1 + (Math.random() * (1000 - 1)),\n                name: action.task.name,\n                status: action.status === 'true' ? true : false,\n            }\n            state.push(newTask);\n            localStorage.setItem('tasks', JSON.stringify(state));\n\n            return [...state];\n        case types.UPDATE_STATUS_TASK:\n            //kick status thi toggle status\n                let index = this.findIndex(id);\n                if (index !== -1) {\n                    tasks[index].status = !tasks[index].status;\n                    this.setState({\n                        tasks: tasks\n                    });\n                    localStorage.setItem('tasks', JSON.stringify(tasks));\n                }\n            \n            return state;\n        default:\n            return state;\n    }\n\n};\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}