{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : '';\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: 1 + Math.random() * (1000 - 1),\n        name: action.task.name,\n        status: action.status === 'true' ? true : false\n      };\n      state.push(newTask);\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return [...state];\n\n    case types.UPDATE_STATUS_TASK:\n      //kick status thi toggle status\n      let tasks = this.state.tasks;\n      let index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Reactjs-Todo-nghiepit/src/reducers/tasks.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","newTask","id","Math","random","name","task","status","push","setItem","stringify","UPDATE_STATUS_TASK","tasks","index","findIndex","setState"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAK,CAACW,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKR,KAAK,CAACY,QAAX;AACI,UAAIC,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAE,IAAKC,IAAI,CAACC,MAAL,MAAiB,OAAO,CAAxB,CADC;AAEVC,QAAAA,IAAI,EAAER,MAAM,CAACS,IAAP,CAAYD,IAFR;AAGVE,QAAAA,MAAM,EAAEV,MAAM,CAACU,MAAP,KAAkB,MAAlB,GAA2B,IAA3B,GAAkC;AAHhC,OAAd;AAKAX,MAAAA,KAAK,CAACY,IAAN,CAAWP,OAAX;AACAT,MAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA8BnB,IAAI,CAACoB,SAAL,CAAed,KAAf,CAA9B;AAEA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKR,KAAK,CAACuB,kBAAX;AACI;AADJ,UAEcC,KAFd,GAEwB,KAAKhB,KAF7B,CAEcgB,KAFd;AAGQ,UAAIC,KAAK,GAAG,KAAKC,SAAL,CAAeZ,EAAf,CAAZ;;AACA,UAAIW,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,QAAAA,KAAK,CAACC,KAAD,CAAL,CAAaN,MAAb,GAAsB,CAACK,KAAK,CAACC,KAAD,CAAL,CAAaN,MAApC;AACA,aAAKQ,QAAL,CAAc;AACVH,UAAAA,KAAK,EAAEA;AADG,SAAd;AAGApB,QAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA8BnB,IAAI,CAACoB,SAAL,CAAeE,KAAf,CAA9B;AACH;;AAEL,aAAOhB,KAAP;;AACJ;AACI,aAAOA,KAAP;AA3BR;AA8BH,CA/BD;;AAiCA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes';\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : '';\n\nvar myReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.LIST_ALL:\n            return state;\n        case types.ADD_TASK:\n            var newTask = {\n                id: 1 + (Math.random() * (1000 - 1)),\n                name: action.task.name,\n                status: action.status === 'true' ? true : false,\n            }\n            state.push(newTask);\n            localStorage.setItem('tasks', JSON.stringify(state));\n\n            return [...state];\n        case types.UPDATE_STATUS_TASK:\n            //kick status thi toggle status\n                let { tasks } = this.state;\n                let index = this.findIndex(id);\n                if (index !== -1) {\n                    tasks[index].status = !tasks[index].status;\n                    this.setState({\n                        tasks: tasks\n                    });\n                    localStorage.setItem('tasks', JSON.stringify(tasks));\n                }\n            \n            return state;\n        default:\n            return state;\n    }\n\n};\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}