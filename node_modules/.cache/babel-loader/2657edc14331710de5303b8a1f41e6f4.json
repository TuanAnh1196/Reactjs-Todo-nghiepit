{"ast":null,"code":"var _jsxFileName = \"/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Reactjs-Todo-nghiepit/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport demo from './training/demo';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onGenerateData = () => {\n      var tasks = [{\n        id: 1,\n        name: 'Hoc Lap Trinh',\n        status: true\n      }];\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onToggleForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onSubmit = data => {\n      console.log(data);\n      let tasks = this.state.tasks;\n\n      if (data.id === '') {\n        //them thi id  ='' \n        let item = {\n          id: 1 + Math.random() * (1000 - 1),\n          name: data.name,\n          status: data.status\n        };\n        tasks.push(item);\n      } else {\n        //sua \n        let index = this.findIndex(data.id);\n        tasks[index] = data;\n      }\n\n      this.setState({\n        tasks: tasks,\n        taskEditting: null //xoa bien de bam nut them dc\n\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      let tasks = this.state.tasks;\n      let index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n    };\n\n    this.findIndex = id => {\n      let tasks = this.state.tasks;\n      let result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      let tasks = this.state.tasks; //tra ve mang moi remove object co id = id \n\n      let newTasks = tasks.filter(task => {\n        return task.id !== id;\n      });\n      this.setState({\n        tasks: newTasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(newTasks));\n      this.onCloseForm();\n    };\n\n    this.onUpdate = id => {\n      let tasks = this.state.tasks;\n      let index = this.findIndex(id);\n      let taskEditting = tasks[index]; // object task muốn sửa \n\n      this.setState({\n        taskEditting: taskEditting\n      });\n      this.onToggleForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus);\n      this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword.toLowerCase()\n      });\n    };\n\n    this.onSort = sort => {\n      this.setState({\n        sort: sort\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      taskEditting: null,\n      filter: {\n        name: \"\",\n        status: -1\n      },\n      keyword: \"\"\n    };\n  } // //khi load lai trang thi function dc call\n\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  } //tao du lieu dau \n\n\n  render() {\n    let _this$state = this.state,\n        tasks = _this$state.tasks,\n        isDisplayForm = _this$state.isDisplayForm,\n        taskEditting = _this$state.taskEditting,\n        filter = _this$state.filter,\n        keyword = _this$state.keyword,\n        sort = _this$state.sort;\n\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter(task => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n\n      tasks = tasks.filter(task => {\n        if (filter.status === -1) {\n          //lay tat ca\n          return tasks;\n        } else {\n          // status: 1 la lay kick hoat\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    if (sort) {\n      if (sort.by === 'name') {\n        tasks.sort((a, b) => {\n          if (a.name > b.name) return sort.value;else if (a.name < b.name) return -sort.value;else return 0;\n        });\n      } else {\n        tasks.sort((a, b) => {\n          if (a.status > b.status) return -sort.value;else if (a.status < b.status) return sort.value;else return 0;\n        });\n      }\n    }\n\n    const elmTaskForm = isDisplayForm === true ? React.createElement(TaskForm, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.onCloseForm,\n      task: taskEditting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-4 col-sm-4 col-md-4 col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger ml-5\",\n      onClick: this.onGenerateData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Generate Data\"), React.createElement(Control, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sortCallback: sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(TaskList, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Reactjs-Todo-nghiepit/src/App.js"],"names":["React","TaskForm","Control","TaskList","demo","App","Component","constructor","props","onGenerateData","tasks","id","name","status","setState","localStorage","setItem","JSON","stringify","onToggleForm","isDisplayForm","state","onCloseForm","onSubmit","data","console","log","item","Math","random","push","index","findIndex","taskEditting","onUpdateStatus","result","forEach","task","onDelete","newTasks","filter","onUpdate","onFilter","filterName","filterStatus","parseInt","toLowerCase","onSearch","keyword","onSort","sort","componentWillMount","getItem","parse","render","indexOf","by","a","b","value","elmTaskForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport demo from './training/demo'; \n \nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [],\n            isDisplayForm: false,\n            taskEditting: null,\n            filter: {\n                name: \"\",\n                status: -1\n            },\n            keyword: \"\"\n        }\n    }\n    // //khi load lai trang thi function dc call\n    componentWillMount() {\n        if (localStorage && localStorage.getItem('tasks')) {\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks: tasks\n            })\n        }\n    }\n    //tao du lieu dau \n    onGenerateData = () => {\n        var tasks = [\n            {\n                id: 1,\n                name: 'Hoc Lap Trinh',\n                status: true\n            },\n        ];\n        this.setState({\n            tasks: tasks\n        })\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    onToggleForm = () => {\n        this.setState({\n            isDisplayForm: !this.state.isDisplayForm,\n        });\n    }\n    // kick nut x dong form \n    onCloseForm = () => {\n        this.setState({\n            isDisplayForm: false,\n\n        });\n    }\n    //them du lieu \n    onSubmit = (data) => {\n        console.log(data);\n        let { tasks } = this.state;\n        if (data.id === '') { //them thi id  ='' \n            let item = {\n                id: 1 + (Math.random() * (1000 - 1)),\n                name: data.name,\n                status: data.status\n            }\n            tasks.push(item);\n        } else { //sua \n            let index = this.findIndex(data.id);\n            tasks[index] = data;\n        }\n        this.setState({\n            tasks: tasks,\n            taskEditting: null //xoa bien de bam nut them dc\n\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n    //kick status thi toggle status\n    onUpdateStatus = (id) => {\n        let { tasks } = this.state;\n        let index = this.findIndex(id);\n        if (index !== -1) {\n            tasks[index].status = !tasks[index].status;\n            this.setState({\n                tasks: tasks\n            });\n            localStorage.setItem('tasks', JSON.stringify(tasks));\n        }\n    }\n    //find index to change status \n    findIndex = (id) => {\n        let { tasks } = this.state;\n        let result = -1;\n        tasks.forEach((task, index) => {\n            if (task.id === id) {\n                result = index;\n            }\n        });\n        return result;\n    }\n    // delete record\n    onDelete = (id) => {\n        let { tasks } = this.state;\n        //tra ve mang moi remove object co id = id \n        let newTasks = tasks.filter((task) => {\n            return task.id !== id;\n        });\n        this.setState({\n            tasks: newTasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(newTasks));\n        this.onCloseForm();\n    }\n\n    onUpdate = (id) => {\n        let { tasks } = this.state;\n        let index = this.findIndex(id);\n        let taskEditting = tasks[index];// object task muốn sửa \n        this.setState({\n            taskEditting: taskEditting\n        });\n        this.onToggleForm();\n    }\n\n    onFilter = (filterName, filterStatus) => {\n        filterStatus = parseInt(filterStatus);\n        this.setState({\n            filter: {\n                name: filterName.toLowerCase(),\n                status: filterStatus\n            }\n        });\n    }\n\n    onSearch =(keyword)=>{\n        \n        this.setState({\n            keyword: keyword.toLowerCase(),\n        });\n\n    }\n\n    onSort = (sort)=>{\n        this.setState({\n            sort: sort\n        });\n    }\n\n    render() {\n        let { tasks, isDisplayForm, taskEditting, filter, keyword, sort } = this.state;\n        \n        if(filter){\n            if (filter.name) {\n                tasks = tasks.filter((task) => {\n                    return task.name.toLowerCase().indexOf(filter.name) !== -1;\n                });\n            }\n            tasks = tasks.filter((task) => {\n                if (filter.status === -1) { //lay tat ca\n                    return tasks;\n                } else { // status: 1 la lay kick hoat\n                    return task.status === (filter.status === 1 ? true : false)\n                }\n            });\n        }\n\n        if(keyword){\n            tasks = tasks.filter((task) => {\n                return task.name.toLowerCase().indexOf(keyword) !== -1;\n            });\n        }\n\n        if(sort){\n            if(sort.by==='name'){\n                tasks.sort((a,b)=>{\n                    if(a.name > b.name) return sort.value;\n                    else if(a.name <b.name) return -sort.value;\n                    else return 0;\n                })\n            }else{\n                tasks.sort((a,b)=>{\n                    if(a.status > b.status) return -sort.value;\n                    else if(a.status <b.status) return sort.value;\n                    else return 0;\n                })\n            }\n        }\n        \n        \n        const elmTaskForm = isDisplayForm === true ?\n            <TaskForm\n                onSubmit={this.onSubmit}\n                onCloseForm={this.onCloseForm}\n                task={taskEditting}\n            /> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1>\n                    <hr />\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n                        {elmTaskForm}\n                    </div>\n                    <div className={isDisplayForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' :\n                        'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.onToggleForm}\n                        >\n                            <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n                        </button>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-danger ml-5\"\n                            onClick={this.onGenerateData}\n                        >\n                            Generate Data\n                        </button>\n                        <Control \n                            onSearch={this.onSearch} \n                            onSort={this.onSort}\n                            sortCallback={sort}\n                            />\n                        <div className=\"row mt-15\">\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                                <TaskList\n                                    tasks={tasks}\n                                    onUpdateStatus={this.onUpdateStatus}\n                                    onDelete={this.onDelete}\n                                    onUpdate={this.onUpdate}\n                                    onFilter={this.onFilter}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}