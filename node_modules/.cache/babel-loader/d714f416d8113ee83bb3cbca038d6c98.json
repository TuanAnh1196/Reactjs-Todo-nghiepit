{"ast":null,"code":"var _jsxFileName = \"/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Reactjs-Todo-nghiepit/src/components/TaskForm.js\";\nimport React from 'react';\nimport * as actions from './../actions/index';\nimport { connect } from 'react-redux';\n\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onCloseForm = () => {\n      this.props.onCloseForm();\n    };\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      if (name === \"status\") {\n        value = target.value === 'true' ? true : false;\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault(); //ko load trang\n\n      this.props.onSaveTask(this.state); //after submit cancer and close form\n\n      this.onClear();\n      this.onCloseForm();\n    };\n\n    this.onClear = () => {\n      this.setState({\n        name: '',\n        status: false\n      });\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      status: false\n    };\n  } //khi kick nut edit hàm sẽ thực thi( licycle) \n\n\n  componentWillMount() {\n    if (this.props.itemEditting) {\n      const itemEditting = this.props.itemEditting;\n      this.setState({\n        id: itemEditting.id,\n        name: itemEditting.name,\n        status: itemEditting.status\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.itemEditting) {\n      this.setState({\n        id: nextProps.itemEditting.id,\n        name: nextProps.itemEditting.name,\n        status: nextProps.itemEditting.status\n      });\n    }\n  }\n\n  render() {\n    let id = this.state.id;\n    if (!this.props.isDisplayForm) return '';\n    return React.createElement(\"div\", {\n      className: \"panel panel-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, id !== '' ? 'Sửa Công Việc' : 'Thêm Công Việc'), React.createElement(\"span\", {\n      className: \"fa fa-times-circle text-right\",\n      onClick: this.onCloseForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"T\\xEAn :\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng Th\\xE1i :\"), React.createElement(\"select\", {\n      className: \"form-control\",\n      required: \"required\",\n      name: \"status\",\n      value: this.state.status,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"K\\xEDch Ho\\u1EA1t\"), React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\u1EA8n\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"L\\u01B0u l\\u1EA1i\"), \"\\xA0\", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: this.onClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"H\\u1EE7y B\\u1ECF\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditting: state.itemEditting\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onSaveTask: task => {\n      dispatch(actions.saveTask(task));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);","map":{"version":3,"sources":["/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Reactjs-Todo-nghiepit/src/components/TaskForm.js"],"names":["React","actions","connect","TaskForm","Component","constructor","props","onCloseForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","onSaveTask","state","onClear","status","id","componentWillMount","itemEditting","componentWillReceiveProps","nextProps","render","isDisplayForm","mapStateToProps","mapDispatchToProps","dispatch","task","saveTask","closeForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as actions from './../actions/index';\nimport {connect} from 'react-redux';\n\n\nclass TaskForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            name: '',\n            status: false\n        }\n    }\n    //khi kick nut edit hàm sẽ thực thi( licycle) \n    componentWillMount() {\n        if (this.props.itemEditting) {\n            const { itemEditting } = this.props;\n            this.setState({\n                id: itemEditting.id,\n                name: itemEditting.name,\n                status: itemEditting.status\n            });\n        }\n    }\n    componentWillReceiveProps(nextProps){\n        if (nextProps && nextProps.itemEditting) {\n            this.setState({\n                id: nextProps.itemEditting.id,\n                name: nextProps.itemEditting.name,\n                status: nextProps.itemEditting.status\n            });\n        }\n    }\n\n    onCloseForm = () => {\n        this.props.onCloseForm();\n    }\n    //lay du lieu tu form khi bam submit va set state \n    onChange = (event) => {\n        var target = event.target;\n        var name = target.name;\n        var value = target.value;\n        if (name === \"status\") {\n            value = (target.value === 'true' ? true : false);\n        }\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault(); //ko load trang\n        this.props.onSaveTask(this.state); \n        //after submit cancer and close form\n        this.onClear();\n        this.onCloseForm();\n    }\n\n    onClear = () => {\n        this.setState({\n            name: '',\n            status: false\n        })\n    }\n\n    render() {\n        let { id } = this.state;\n        if(!this.props.isDisplayForm) return '';\n        return (\n            <div className=\"panel panel-warning\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">\n                        {id !== '' ? 'Sửa Công Việc' : 'Thêm Công Việc'}\n                    </h3>\n                    <span\n                        className=\"fa fa-times-circle text-right\"\n                        onClick={this.onCloseForm}\n                    >\n\n                    </span>\n                </div>\n                <div className=\"panel-body\">\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <label>Tên :</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name='name'\n                                value={this.state.name}\n                                onChange={this.onChange}\n                            />\n                        </div>\n                        <label>Trạng Thái :</label>\n                        <select\n                            className=\"form-control\"\n                            required=\"required\"\n                            name='status'\n                            value={this.state.status}\n                            onChange={this.onChange}\n                        >\n                            <option value={true}>Kích Hoạt</option>\n                            <option value={false}>Ẩn</option>\n                        </select>\n                        <br />\n                        <div className=\"text-center\">\n                            <button type=\"submit\" className=\"btn btn-warning\">Lưu lại</button>&nbsp;\n                            <button\n                                type=\"button\"\n                                className=\"btn btn-danger\"\n                                onClick={this.onClear}\n                            >\n                                Hủy Bỏ\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        isDisplayForm: state.isDisplayForm,\n        itemEditting: state.itemEditting\n    }\n};\nconst mapDispatchToProps = (dispatch, props)=>{\n    return {\n        onSaveTask: (task)=>{\n            dispatch(actions.saveTask(task));\n        },\n        onCloseForm: ()=>{\n            dispatch(actions.closeForm());\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskForm);\n"]},"metadata":{},"sourceType":"module"}