{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : '';\n\nvar myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: 1 + Math.random() * (1000 - 1),\n        name: action.task.name,\n        status: action.status === 'true' ? true : false\n      };\n      state.push(newTask);\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return [...state];\n\n    case types.UPDATE_STATUS_TASK:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/home/tuananh/Desktop/HocReactJS/project-yout-nghiepit/Reactjs-Todo-nghiepit/src/reducers/tasks.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","newTask","id","Math","random","name","task","status","push","setItem","stringify","UPDATE_STATUS_TASK"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,IAAIM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,KAAK,CAACW,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKR,KAAK,CAACY,QAAX;AACI,UAAIC,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAE,IAAKC,IAAI,CAACC,MAAL,MAAiB,OAAO,CAAxB,CADC;AAEVC,QAAAA,IAAI,EAAER,MAAM,CAACS,IAAP,CAAYD,IAFR;AAGVE,QAAAA,MAAM,EAAEV,MAAM,CAACU,MAAP,KAAkB,MAAlB,GAA2B,IAA3B,GAAkC;AAHhC,OAAd;AAKAX,MAAAA,KAAK,CAACY,IAAN,CAAWP,OAAX;AACAT,MAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA8BnB,IAAI,CAACoB,SAAL,CAAed,KAAf,CAA9B;AAEA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAKR,KAAK,CAACuB,kBAAX;AACI,aAAOf,KAAP;;AACJ;AACI,aAAOA,KAAP;AAhBR;AAmBH,CApBD;;AAsBA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes';\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : '';\n\nvar myReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.LIST_ALL:\n            return state;\n        case types.ADD_TASK:\n            var newTask = {\n                id: 1 + (Math.random() * (1000 - 1)),\n                name: action.task.name,\n                status: action.status === 'true' ? true : false,\n            }\n            state.push(newTask);\n            localStorage.setItem('tasks', JSON.stringify(state));\n\n            return [...state];\n        case types.UPDATE_STATUS_TASK:\n            return state;\n        default:\n            return state;\n    }\n\n};\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}